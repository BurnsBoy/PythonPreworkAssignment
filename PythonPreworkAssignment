# Question 1
# Write a function to print "hello_USERNAME!" USERNAME is the input of the function. 
# The first line of the code has been defined as below.
def hello_name(user_name):
    print(f"hello_{user_name}!")


# Question 2
# Write a python function, first_odds that prints the odd numbers from 1-100 and returns nothing
def first_odds():
    for i in range(1,100,2):
        print(i,end=" ")


# Question 3
# Please write a Python function, max_num_in_list to return the max number of a given list. 
# The first line of the code has been defined as below.
def max_num_in_list(a_list):
    x = a_list[0]
    for num in a_list:
        if (x < num):
            x = num
    return x


# Question 4
# Write a function to return if the given year is a leap year. 
# A leap year is divisible by 4, but not divisible by 100, unless it is also divisible by 400. 
# The return should be boolean Type (true/false).
def is_leap_year(a_year):
    if a_year % 4 == 0:
        if a_year % 100 == 0:
            if a_year % 400 == 0:
                return True
            else:
                return False
        else:
            return True
    else:
        return False


# Question 5
# Write a function to check to see if all numbers in list are consecutive numbers. 
# For example, [2,3,4,5,6,7] are consecutive numbers, but [1,2,4,5] are not consecutive numbers. The return should be boolean Type.
def is_consecutive(a_list):
    for i in range(len(a_list)):
        if i < len(a_list) - 1:
            if a_list[i+1] == a_list[i] + 1:
                continue
            else:
                return False
    return True


#function tests!

#1
hello_name("USERNAME")


#2
first_odds()
print('')


#3
my_list = [4, 8, 1, 6, 43, 9, 10, 5, 2]
print(max_num_in_list(my_list))


#4
print(is_leap_year(2023), is_leap_year(1996), is_leap_year(2000), is_leap_year(1900))


#5
consecutive_list = [2014, 2015, 2016, 2017, 2018, 2019]
almost_consecutive_list = [1, 2, 3, 4, 6]
print(is_consecutive(consecutive_list), is_consecutive(almost_consecutive_list), is_consecutive(my_list))